{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Downloads/01-starting-project/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './assets/investment-calculator-logo.png';\nimport Header from './components/Headers/Header';\nimport InputForm from './components/UserInput/InputForm';\nimport ResultsTable from './components/ResultsTable/ResultsTable';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userInput, setUserInput] = useState(null);\n  const calculateHandler = input => {\n    setUserInput(input);\n  };\n  const yearlyData = []; // per-year results\n\n  if (userInput) {\n    let currentSavings = +userInput['current-savings'];\n    const yearlyContribution = +userInput['yearly-contribution'];\n    const expectedReturn = +userInput['expected-return'] / 100;\n    const duration = +userInput['duration'];\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      logo: logo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n      onCalculate: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), !userInput && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No results available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 22\n    }, this), userInput && /*#__PURE__*/_jsxDEV(ResultsTable, {\n      yearlyData: yearlyData,\n      initialInvestment: userInput['current-savings']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nCOotz9vTgzH/m310d2/03oFEtk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Header","InputForm","ResultsTable","useState","jsxDEV","_jsxDEV","App","_s","userInput","setUserInput","calculateHandler","input","yearlyData","currentSavings","yearlyContribution","expectedReturn","duration","i","yearlyInterest","push","year","savingsEndOfYear","children","fileName","_jsxFileName","lineNumber","columnNumber","onCalculate","initialInvestment","_c","$RefreshReg$"],"sources":["/Users/mac/Downloads/01-starting-project/src/App.js"],"sourcesContent":["import logo from './assets/investment-calculator-logo.png';\nimport Header from './components/Headers/Header';\nimport InputForm from './components/UserInput/InputForm';\nimport ResultsTable from './components/ResultsTable/ResultsTable';\nimport { useState } from 'react';\n\n\n\nfunction App() {\n  const [userInput, setUserInput]= useState(null)\n  \n  const calculateHandler = (input) => {\n    \n    setUserInput(input)\n  };\n\n  const yearlyData = []; // per-year results\n\n   if (userInput){\n    \n    let currentSavings = +userInput['current-savings']; \n    const yearlyContribution = +userInput['yearly-contribution'];\n    const expectedReturn = +userInput['expected-return'] / 100;\n    const duration = +userInput['duration'];\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n      });\n    }\n  }\n\n\n\n  return (\n    <div>\n      <Header\n      logo={logo}\n      />\n     \n      <InputForm onCalculate={calculateHandler}/>\n    \n      {!userInput && <p>No results available</p>}\n      {userInput && <ResultsTable yearlyData={yearlyData} initialInvestment={userInput['current-savings']}/>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,yCAAyC;AAC1D,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,SAAS,MAAM,kCAAkC;AACxD,OAAOC,YAAY,MAAM,wCAAwC;AACjE,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAEN,QAAQ,CAAC,IAAI,CAAC;EAE/C,MAAMO,gBAAgB,GAAIC,KAAK,IAAK;IAElCF,YAAY,CAACE,KAAK,CAAC;EACrB,CAAC;EAED,MAAMC,UAAU,GAAG,EAAE,CAAC,CAAC;;EAEtB,IAAIJ,SAAS,EAAC;IAEb,IAAIK,cAAc,GAAG,CAACL,SAAS,CAAC,iBAAiB,CAAC;IAClD,MAAMM,kBAAkB,GAAG,CAACN,SAAS,CAAC,qBAAqB,CAAC;IAC5D,MAAMO,cAAc,GAAG,CAACP,SAAS,CAAC,iBAAiB,CAAC,GAAG,GAAG;IAC1D,MAAMQ,QAAQ,GAAG,CAACR,SAAS,CAAC,UAAU,CAAC;;IAEvC;IACA,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;MACjC,MAAMC,cAAc,GAAGL,cAAc,GAAGE,cAAc;MACtDF,cAAc,IAAIK,cAAc,GAAGJ,kBAAkB;MACrDF,UAAU,CAACO,IAAI,CAAC;QACd;QACAC,IAAI,EAAEH,CAAC,GAAG,CAAC;QACXC,cAAc,EAAEA,cAAc;QAC9BG,gBAAgB,EAAER,cAAc;QAChCC,kBAAkB,EAAEA;MACtB,CAAC,CAAC;IACJ;EACF;EAIA,oBACET,OAAA;IAAAiB,QAAA,gBACEjB,OAAA,CAACL,MAAM;MACPD,IAAI,EAAEA;IAAK;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAEFrB,OAAA,CAACJ,SAAS;MAAC0B,WAAW,EAAEjB;IAAiB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAE1C,CAAClB,SAAS,iBAAIH,OAAA;MAAAiB,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACzClB,SAAS,iBAAIH,OAAA,CAACH,YAAY;MAACU,UAAU,EAAEA,UAAW;MAACgB,iBAAiB,EAAEpB,SAAS,CAAC,iBAAiB;IAAE;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnG,CAAC;AAEV;AAACnB,EAAA,CA7CQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}